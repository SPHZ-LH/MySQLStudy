17、数据处理函数
    17.1、数据处理函数又被称为单行处理函数

    单行处理函数的特点：一个输入对应一个输出。

    和单行处理函数相对的是：多行处理函数。（多行处理函数特点：多行输入，对应1个输出！）

    17.2、单行处理函数常用的有哪些？
        lower 转换小写
            mysql> select lower(ename) as ename from emp;
            +--------+
            | ename  |
            +--------+
            | simith |
            | allen  |
            | ward   |
            | jones  |
            | martin |
            | blake  |
            | clark  |
            | scott  |
            | king   |
            | turner |
            | adams  |
            | james  |
            | ford   |
            | miller |
            +--------+
            14个输入，最后还是14个输出。这是单行处理函数的特点。

        upper 转换大写
            mysql> select upper(ename) as ename from emp;
            +--------+
            | ename  |
            +--------+
            | SIMITH |
            | ALLEN  |
            | WARD   |
            | JONES  |
            | MARTIN |
            | BLAKE  |
            | CLARK  |
            | SCOTT  |
            | KING   |
            | TURNER |
            | ADAMS  |
            | JAMES  |
            | FORD   |
            | MILLER |
            +--------+

        substr 取子串（substr（被截取的字符串，起始下标，截取的长度））
            select substr(ename, 1, 1) as ename from emp;
            注意：起始下标从1开始，没有0。
            找出员工名字第一个字母是A的员工信息？
                第一种方式：模糊查询
                    select ename from emp where ename like 'A%';
                第二种方式：substr函数
                    select ename from emp where substr(ename,1,1) = 'A';

        length 取长度
            select length(ename) as enamelength from emp;
            +-------------+
            | enamelength |
            +-------------+
            |           6 |
            |           5 |
            |           4 |
            |           5 |
            |           6 |
            |           5 |
            |           5 |
            |           5 |
            |           4 |
            |           6 |
            |           5 |
            |           5 |
            |           4 |
            |           6 |
            +-------------+

        trim 去空格
            mysql> select * from emp where ename = '   KING';
            Empty set (0.00 sec)

            mysql> select * from emp where ename = trim('   KING');
            +-------+-------+-----------+------+------------+---------+------+--------+
            | empno | ename | job       | mgr  | hiredate   | sal     | comm | deptno |
            +-------+-------+-----------+------+------------+---------+------+--------+
            |  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
            +-------+-------+-----------+------+------------+---------+------+--------+

        str_to_date 将字符串转换成日期
        date_format 格式化日期
        format 设置千分位

        case..when..then..when..then..else..end
            当员工的工作岗位是MANAGER的时候，工资上调10%，当工作岗位是SALESMAN的时候，工资上调50%，其他正常。
            （注意：不修改数据库，只是将调查结果显示为工资上调）
            mysql-> select
                 ->    ename,
                 ->    job,
                 ->    sal as oldsal,
                 ->    (case job when 'MANAGER' then sal*1.1 when 'SALESMAN' then sal*1.5 else sal end) as newsal
                 -> from
                       emp;
            +--------+-----------+---------+---------+
            | ename  | job       | oldsal  | newsal  |
            +--------+-----------+---------+---------+
            | SIMITH | CLERK     |  800.00 |  800.00 |
            | ALLEN  | SALESMAN  | 1600.00 | 2400.00 |
            | WARD   | SALESMAN  | 1250.00 | 1875.00 |
            | JONES  | MANAGER   | 2975.00 | 3272.50 |
            | MARTIN | SALESMAN  | 1250.00 | 1875.00 |
            | BLAKE  | MANAGER   | 2850.00 | 3135.00 |
            | CLARK  | MANAGER   | 2450.00 | 2695.00 |
            | SCOTT  | ANALYST   | 3000.00 | 3000.00 |
            | KING   | PRESIDENT | 5000.00 | 5000.00 |
            | TURNER | SALESMAN  | 1500.00 | 2250.00 |
            | ADAMS  | CLERK     | 1100.00 | 1100.00 |
            | JAMES  | CLERK     |  950.00 |  950.00 |
            | FORD   | ANALYST   | 3000.00 | 3000.00 |
            | MILLER | CLERK     | 1300.00 | 1300.00 |
            +--------+-----------+---------+---------+

        round 四舍五入
            select 字段 from 表名;
            select ename from emp;
            select 'abc' from emp; // select后面直接跟“字面量/字面值”

            mysql> select 'abc' as name from emp;
            +------+
            | name |
            +------+
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            | abc  |
            +------+

            mysql> select abc from emp;
            ERROR 1054 (42S22): Unknown column 'abc' in 'field list'
            这样肯定报错，因为会把abc当作一个字段的名字，去emp表中找abc字段去了。

            mysql> select 1000 as num from emp; // 1000 也是被当作一个"字面量/字面值"
            +------+
            | num  |
            +------+
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            | 1000 |
            +------+ 

            结论：select后面可以跟某个表的字段名（可以等同看做变量名），也可以跟字面量/字面值（数据）。
            mysql> select 2100 as num from dept;
            +------+
            | num  |
            +------+
            | 2100 |
            | 2100 |
            | 2100 |
            | 2100 |
            +------+

            mysql> select round(1236.567,0) as result from emp;
            +--------+
            | result |
            +--------+
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            |   1237 |
            +--------+

            mysql> select round(1236.567,1) as result from emp; // 保留1位小数
            mysql> select round(1236.567,2) as result from emp; // 保留2位小数
            mysql> select round(1236.567,-1) as result from emp; // 保留到十位
            +--------+
            | result |
            +--------+
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            |   1240 |
            +--------+

        rand() 生成随机数
            mysql> select round(rand()*100,0) as round from emp; // 100以内的随机数
            +-------+
            | round |
            +-------+
            |    88 |
            |    69 |
            |    78 |
            |    83 |
            |    83 |
            |    63 |
            |    70 |
            |    57 |
            |    78 |
            |    18 |
            |    54 |
            |    18 |
            |    25 |
            |    75 |
            +-------+

        ifnull 可以将null转换成一个具体值
            ifnull是空处理函数。专门处理空的。
            在所有数据库当中，只有NULL参与的数学运算，最终结果就是NULL。
            mysql> select ename,sal + comm as salcomm from emp;
            +--------+---------+
            | ename  | salcomm |
            +--------+---------+
            | SIMITH |    NULL |
            | ALLEN  | 1900.00 |
            | WARD   | 1750.00 |
            | JONES  |    NULL |
            | MARTIN | 2650.00 |
            | BLAKE  |    NULL |
            | CLARK  |    NULL |
            | SCOTT  |    NULL |
            | KING   |    NULL |
            | TURNER |    NULL |
            | ADAMS  |    NULL |
            | JAMES  |    NULL |
            | FORD   |    NULL |
            | MILLER |    NULL |
            +--------+---------+

        计算每个员工的年薪？
            年薪 = （月薪 + 月补助） * 12
            mysql> select ename,(sal + comm ) * 12 as yearsal from emp;
            +--------+----------+
            | ename  | yearsal  |
            +--------+----------+
            | SIMITH |     NULL |
            | ALLEN  | 22800.00 |
            | WARD   | 21000.00 |
            | JONES  |     NULL |
            | MARTIN | 31800.00 |
            | BLAKE  |     NULL |
            | CLARK  |     NULL |
            | SCOTT  |     NULL |
            | KING   |     NULL |
            | TURNER |     NULL |
            | ADAMS  |     NULL |
            | JAMES  |     NULL |
            | FORD   |     NULL |
            | MILLER |     NULL |
            +--------+----------+

            注意：NULL只要参与运算，最终结果一定是NULL。为了避免这个现象，需要使用ifnull函数。
            ifnull函数用法：ifnull（数据，被当作哪个值）
                如果“数据”位NULL的时候，把这个数据结构当做哪个值。

            补助为NULL的时候，将补助当作0
                mysql> select ename,(sal + ifnull(comm,0)) * 12 as yearsal from emp;
                +--------+----------+
                | ename  | yearsal  |
                +--------+----------+
                | SIMITH |  9600.00 |
                | ALLEN  | 22800.00 |
                | WARD   | 21000.00 |
                | JONES  | 35700.00 |
                | MARTIN | 31800.00 |
                | BLAKE  | 34200.00 |
                | CLARK  | 29400.00 |
                | SCOTT  | 36000.00 |
                | KING   | 60000.00 |
                | TURNER | 18000.00 |
                | ADAMS  | 13200.00 |
                | JAMES  | 11400.00 |
                | FORD   | 36000.00 |
                | MILLER | 15600.00 |
                +--------+----------+