31、视图（view）

    31.1、什么是视图？
        view：站在不同的角度去看待同一份数据。

    31.2、怎么创建视图对象？怎么删除视图对象？
        mysql> create table dept2 as select * from dept;

        dept2表中的数据：
        mysql> select * from dept2;
        +--------+-------------+----------+
        | deptno | dname       | loc      |
        +--------+-------------+----------+
        |     10 | ACCOUNTING  | NEW YORK |
        |     20 | RESEARCHING | DALLAS   |
        |     30 | SALES       | CHICAGO  |
        |     40 | OPERATIONS  | BOSTON   |
        +--------+-------------+----------+

        创建视图对象：
            create view dept2_view as select * from dept2;

        删除视图对象：
            drop view dept2_view;

        注意：只有DQL语句才能以view的形式创建。
            create view view_name as 这里的语句必须是DQL语句；
            
    31.3、用视图做什么？

        我们可以面向视图对象进行增删改查，对视图对象的增删改查，会导致
        原表被操作！（视图的特点：通过对视图的操作，会影响到原表的数据。）

        // 面向视图的查询
        select * from dept2_view;

        // 面向视图的插入
        insert into dept2_view(deptno,dname,loc) values(60,'SALES','BEIJING');

        // 查询原表数据
        mysql> select * from dept2;
        +--------+-------------+----------+
        | deptno | dname       | loc      |
        +--------+-------------+----------+
        |     10 | ACCOUNTING  | NEW YORK |
        |     20 | RESEARCHING | DALLAS   |
        |     30 | SALES       | CHICAGO  |
        |     40 | OPERATIONS  | BOSTON   |
        |     60 | SALES       | BEIJING  |
        +--------+-------------+----------+

        // 面向视图删除
        mysql> delete from dept2_view;

        // 查询原表数据
        mysql> select * from dept2;
        Empty set (0.00 sec)

    31.4、视图对象在实际开发中到底有什么用？《方便，简化开发，利于维护》

        create view
            emp_dept_view
        as
            select
                e.ename,e.sal,d.dname
            from
                emp e
            join
                dept d
            on
                e.deptno = d.deptno;

        假设有一条非常复杂的SQL语句，而这条SQL语句需要在不同的位置上反复使用。
        每一次使用这个SQL语句的时候都需要重新编写，很长，很麻烦，怎么办？
            可以把这条复杂的SQL语句以视图对象的形式新建。
            在需要编写这条SQL语句的位置直接使用视图对象，可以大大简化开发。
            并且利于后期的维护，因为修改的时候也只需要修改一个位置就行，只需要
            修改视图对象所映照的SQL语句。

        我们以后面向视图开发的时候，使用视图的时候可以像使用table一样。
        可以对视图进行增删改查等操作。视图不是在内存当中，视图对象也是
        存储在硬盘上的，不会消失。

        再提醒一下：
            视图对应的语句只能是DQL语句。
            但是视图对象创建完成之后，可以对视图进行增删改查等操作。

        小插曲：
            增删改查，又叫做：CRUD
            CRUD是再公司中程序员之间沟通的术语。一般我们很少说增删改查。
            一般都说CRUD。

            C:Create（增）
            R:Retrive（查：检索）
            U:Update（改）
            D:Delete（删）